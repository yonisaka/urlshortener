// service
syntax = "proto3";

// Import entity proto.
import "proto/entity.proto";
// Import https://github.com/bufbuild/protoc-gen-validate.
import "validate/validate.proto";
// Import https://protobuf.dev/reference/protobuf/google.protobuf/#timestamp.
import "google/protobuf/timestamp.proto";
// Import https://github.com/googleapis/googleapis/blob/master/google/api/annotations.proto.
import "google/api/annotations.proto";
// Import https://github.com/grpc-ecosystem/grpc-gateway/blob/main/protoc-gen-openapiv2/options/annotations.proto.
import "protoc-gen-openapiv2/options/annotations.proto";

// Target of Go package.
option go_package = "github.com/yonisaka/urlshortener/api/go/grpc";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "URL Shortener Service";
    version: "0.1";
  };
  host: "localhost:8081";
  schemes: HTTP;
  consumes: "application/json";
  responses: {
    key: "400";
    value: {
      description: "Returned when the request parameters are invalid.";
    }
  };
  responses: {
    key: "401";
    value: {
      description: "Returned when the request lacks valid authentication credentials.";
    }
  };
  responses: {
    key: "403";
    value: {
      description: "Returned when the user does not have permission to access the resource.";
    }
  };
  responses: {
    key: "500";
    value: {
      description: "Returned when the server encountered an unexpected condition that prevented it from fulfilling the request.";
    }
  };
};

// URLShortenerService is a service that handles URL shortener.
service URLShortenerService {
  // CreateURL creates a new record for URL Shortener.
  // Only single transaction will create by this RPC for a specific User.
  rpc CreateURLShortener(CreateURLShortenerRequest) returns (e.URLShortener) {
    option (google.api.http) = {
      post: "/v1/url-shortener",
      body: "*",
    };
  }
  // ListURLShortener get the list of records for URL Shortener.
  // The record can be filtered by specific User.
  rpc ListURLShortener(ListURLShortenerRequest) returns (ListURLShortenerResponse) {
    option (google.api.http) = {
      get: "/v1/url-shortener",
    };
  }
  // GetShortenedURL get the shortened URL.
  rpc GetShortenedURL(GetShortenedURLRequest) returns (e.URLShortener) {
    option (google.api.http) = {
      post: "/v1/shortened-url",
      body: "*",
    };
  }
}

// CreateURLShortenerRequest is a request message for CreateURLShortener.
message CreateURLShortenerRequest {
  // (Required) The ID of User.
  int64 user_id = 1 [(validate.rules).int64.gte = 1];
  // (Required) The URL to be shortened.
  string url = 2 [(validate.rules).string.min_len = 1, (validate.rules).string.max_len = 2048];
  // (Required) The date and time of the created transaction.
  google.protobuf.Timestamp datetime = 3 [(validate.rules).timestamp.required = true];
}

// ListURLShortenerRequest is a request message for ListURLShortener.
message ListURLShortenerRequest {
  // (Required) The ID of User.
  int64 user_id = 1 [(validate.rules).int64.gte = 1];
  // (Required) The start date and time filter of the transactions.
  google.protobuf.Timestamp start_datetime = 2 [(validate.rules).timestamp.required = true];
  // (Required) The end date and time filter of the transactions.
  google.protobuf.Timestamp end_datetime = 3 [(validate.rules).timestamp.required = true];
}

// GetShortenedURLRequest is a request message for GetShortenedURL.
message GetShortenedURLRequest {
  // (Required) The Original URL to be shortened.
  string url = 1 [(validate.rules).string.min_len = 1, (validate.rules).string.max_len = 2048];
}

// ListURLShortenerResponse
message ListURLShortenerResponse {
  // The list of Transactions.
  repeated e.URLShortener url_shorteners = 1;
}
