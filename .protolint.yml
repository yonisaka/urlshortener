# https://github.com/yoheimuta/protolint/blob/master/_example/config/.protolint.yaml
lint:
  rules:
    # Determines whether or not to include the default set of linters.
    no_default: false

    # Set the default to all linters. This option works the other way around as no_default does.
    # If you want to enable this option, delete the comment out below and no_default.
    all_default: true

    # The specific linters to add.
    # add:
    #   - FIELD_NAMES_LOWER_SNAKE_CASE
    #   - MESSAGE_NAMES_UPPER_CAMEL_CASE
    #   - MAX_LINE_LENGTH
    #   - INDENT
    #   - SERVICE_NAMES_END_WITH
    #   - FIELD_NAMES_EXCLUDE_PREPOSITIONS
    #   - MESSAGE_NAMES_EXCLUDE_PREPOSITIONS
    #   - FILE_NAMES_LOWER_SNAKE_CASE
    #   - IMPORTS_SORTED
    #   - PACKAGE_NAME_LOWER_CASE
    #   - ORDER
    #   - MESSAGES_HAVE_COMMENT
    #   - SERVICES_HAVE_COMMENT
    #   - RPCS_HAVE_COMMENT
    #   - FIELDS_HAVE_COMMENT
    #   - ENUMS_HAVE_COMMENT
    #   - ENUM_FIELDS_HAVE_COMMENT

    remove:
      - MAX_LINE_LENGTH
      - ENUM_FIELDS_HAVE_COMMENT
      - ENUM_FIELD_NAMES_PREFIX


  # Linter rules option.
  rules_option:
    # MAX_LINE_LENGTH rule option.
    max_line_length:
      # Enforces a maximum line length
      max_chars: 120
      # Specifies the character count for tab characters
      tab_chars: 2

    # INDENT rule option.
    indent:
      # Available styles are 4(4-spaces), 2(2-spaces) or tab.
      style: 2
      # Available newlines are "\n", "\r", or "\r\n".
      newline: "\n"

    # FILE_NAMES_LOWER_SNAKE_CASE rule option.
    file_names_lower_snake_case:
      excludes:
      # - ../proto/invalidFileName.proto

    # IMPORTS_SORTED rule option.
    imports_sorted:
      # Available newlines are "\n", "\r", or "\r\n".
      newline: "\n"

    # ENUM_FIELD_NAMES_ZERO_VALUE_END_WITH rule option.
    enum_field_names_zero_value_end_with:
      suffix: UNSPECIFIED

    # SERVICE_NAMES_END_WITH rule option.
    service_names_end_with:
      text: Service

    # FIELD_NAMES_EXCLUDE_PREPOSITIONS rule option.
    field_names_exclude_prepositions:
      # The specific prepositions to determine if the field name includes.
      prepositions:
        - for
        - at
        - of
      # The specific keywords including prepositions to ignore. E.g. end_of_support is a term you would like to use, and skip checking.
      excludes:
      # - end_of_support

    # MESSAGE_NAMES_EXCLUDE_PREPOSITIONS rule option.
    message_names_exclude_prepositions:
      # The specific prepositions to determine if the message name includes.
      prepositions:
        - With
        - For
        - Of
      # The specific keywords including prepositions to ignore. E.g. EndOfSupport is a term you would like to use, and skip checking.
      excludes:
      # - EndOfSupport

    # MESSAGES_HAVE_COMMENT rule option.
    messages_have_comment:
      # Comments need to begin with the name of the thing being described. default is false.
      should_follow_golang_style: true

    # SERVICES_HAVE_COMMENT rule option.
    services_have_comment:
      # Comments need to begin with the name of the thing being described. default is false.
      should_follow_golang_style: true

    # RPCS_HAVE_COMMENT rule option.
    rpcs_have_comment:
      # Comments need to begin with the name of the thing being described. default is false.
      should_follow_golang_style: true

    # FIELDS_HAVE_COMMENT rule option.
    fields_have_comment:
    # Comments need to begin with the name of the thing being described. default is false.
    # should_follow_golang_style: true

    # ENUMS_HAVE_COMMENT rule option.
    enums_have_comment:
      # Comments need to begin with the name of the thing being described. default is false.
      should_follow_golang_style: true

    # ENUM_FIELDS_HAVE_COMMENT rule option.
    enum_fields_have_comment:
      # Comments need to begin with the name of the thing being described. default is false.
      should_follow_golang_style: true
